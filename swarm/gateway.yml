version: '3.9'
services:
  traefik:
    image: traefik:v2.4.8
    command:
      - "--configFile=/traefik-config.toml"
    volumes:
      - /mnt/roberto-nas/config/traefik/traefik-config.toml:/traefik-config.toml:ro
      - /mnt/roberto-nas/config/traefik/static-provider.toml:/static-provider.toml:ro
      - /mnt/roberto-nas/store/traefik/acme:/etc/traefik/acme
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
    ports:
      - target: 443
        published: 8443
        protocol: tcp
        mode: host
      - target: 80
        published: 8080
        protocol: tcp
        mode: host
    environment:
      - CF_DNS_API_TOKEN_FILE=/run/secrets/cf_dns-api-token
      - CF_ZONE_API_TOKEN_FILE=/run/secrets/cf_zone-api-token
      - TZ=Australia/Melbourne
    secrets:
       - cf_dns-api-token
       - cf_zone-api-token
    deploy:
      placement:
        constraints:
          - node.hostname == sleepybird
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.traefik.rule: "Host(`traefik.rny.app`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
        traefik.http.routers.traefik.tls: "true"
        traefik.http.routers.traefik.tls.certresolver: "cloudflare"
        traefik.http.routers.traefik.tls.domains[0].main: "*.rny.app"
        traefik.http.routers.traefik.middlewares: traefik-chain
        traefik.http.middlewares.traefik-chain.chain.middlewares: "auth-admin@file,strict-https@file"
        traefik.http.routers.traefik.service: "api@internal"
        traefik.http.services.traefik.loadbalancer.server.port: 8080

  adguard:
    image: adguard/adguardhome:v0.105.2
    networks:
      - web
    ports:
      - target: 53
        published: 53
        protocol: udp
        mode: host
      - target: 67
        published: 67
        protocol: tcp
        mode: host
      - target: 67
        published: 67
        protocol: udp
        mode: host
    volumes:
      - /mnt/roberto-nas/config/adguardhome/work:/opt/adguardhome/work
      - /mnt/roberto-nas/config/adguardhome/conf:/opt/adguardhome/conf
    deploy:
      placement:
        constraints:
          - node.hostname == dodo
      replicas: 1
      labels:
        traefik.enable: "true"
        adguard.http.routers.adguard.rule: "Host(`dns.rny.app`)"
        adguard.http.routers.adguard.tls: "true"
        adguard.http.routers.adguard.middlewares: adguard-chain
        adguard.http.middlewares.adguard-chain.chain.middlewares: "strict-https@file,local-only@file"
        adguard.http.routers.adguard.service: adguard
        adguard.http.services.adguard.loadbalancer.server.port: 3000

  onionbox:
    image: ghcr.io/renlord/onionbox:v20.2
    volumes:
      - /mnt/roberto-nas/config/onionbox/theonionbox.cfg:/config/theonionbox.cfg:ro
      - /mnt/roberto-nas/config/onionbox/torrc:/config/torrc:ro
    environment:
      - HOSTNAME=eq908-onionbox
    networks:
      - web
      - tor
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.onionbox.rule: Host(`onionbox.rny.app`)
        traefik.http.routers.onionbox.tls: "true"
        traefik.http.routers.onionbox.middlewares: onionbox-chain
        traefik.http.middlewares.onionbox-chain.chain.middlewares: "strict-https@file,auth-admin@file"
        traefik.http.routers.onionbox.service: onionbox
        traefik.http.services.onionbox.loadbalancer.server.port: 8080

  ddclient:
    image: ghcr.io/linuxserver/ddclient:version-v3.9.1
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Melbourne
    volumes:
      - /mnt/roberto-nas/config/ddclient:/config
    deploy:
      replicas: 1

networks:
  web:
    external: true
  tor:
    external: true

secrets:
  cf_dns-api-token:
    external: true
  cf_zone-api-token:
    external: true

# vim: set syntax=yaml ts=2 sts=2 sw=2:
