version: '3.7'
services:
  jellyfin:
    image: jellyfin/jellyfin:10.6.4
    environment:
      - TZ=Australia/Melbourne
    networks:
      - web
    user: 900:900
    volumes:
      - /mnt/eq908-media-nfs/config/jellyfin:/config
      - /mnt/eq908-media-nfs/data:/media
      - /mnt/eq908-media-nfs/cache/jellyfin:/cache
    deploy:
      placement:
        constraints:
          - node.hostname == dodo
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.jellyfin.tls: "true"
        traefik.http.routers.jellyfin.rule: Host(`stream.rny.app`)
        traefik.http.routers.jellyfin.middlewares: jellyfin-middleware-chain
        traefik.http.middlewares.jellyfin-middleware-chain.chain.middlewares: "strict-https@file"
        traefik.http.routers.jellyfin.service: jellyfin
        traefik.http.services.jellyfin.loadbalancer.server.port: 8096
      resources:
        limits:
          memory: "8G"

  jackett:
    image: ghcr.io/linuxserver/jackett:version-v0.17.437
    environment:
      - TZ=Australia/Melbourne
    volumes:
      - /mnt/eq908-media-nfs/config/jackett:/config
      - /downloads
    networks:
      - web
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.jackett.tls: "true"
        traefik.http.routers.jackett.rule: Host(`torrent-index.rny.app`)
        traefik.http.routers.jackett.middlewares: jackett-middleware-chain
        traefik.http.middlewares.jackett-middleware-chain.chain.middlewares: "strict-https@file"
        traefik.http.routers.jackett.service: jackett
        traefik.http.services.jackett.loadbalancer.server.port: 9117
      resources:
        limits:
          memory: "200M"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9117"]
      interval: 30s
      timeout: 10s
      retries: 6

  sonarr:
    image: ghcr.io/linuxserver/sonarr:version-2.0.0.5344
    networks:
      - web
    environment:
      - PUID=900
      - PGID=900
    volumes:
      - /mnt/eq908-media-nfs/:/mnt/eq908-media-nfs/
      - /mnt/eq908-media-nfs/config/sonarr:/config
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.sonarr.tls: "true"
        traefik.http.routers.sonarr.rule: Host(`sonarr.rny.app`)
        traefik.http.routers.sonarr.middlewares: sonarr-middleware-chain
        traefik.http.middlewares.sonarr-middleware-chain.chain.middlewares: "strict-https@file,auth-admin@file"
        traefik.http.routers.sonarr.service: sonarr
        traefik.http.services.sonarr.loadbalancer.server.port: 8989
      resources:
        limits:
          memory: "500M"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8989"]
      interval: 30s
      timeout: 10s
      retries: 6

  flood:
    image: pocoyo/flood:arm64v8
    tty: true
    environment:
      - PUID=900
      - PGID=900
      - FLOOD_SECRET=/run/secrets/flood_secret
    networks:
      - web
    volumes:
      - /mnt/eq908-media-nfs/data:/data
      - /mnt/eq908-media-nfs/store/flood-db:/flood-db
    secrets:
      - flood_secret
    ports:
      - target: 49184
        published: 49184
        protocol: tcp
        mode: host
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.flood.tls: "true"
        traefik.http.routers.flood.rule: Host(`torrents.rny.app`)
        traefik.http.routers.flood.middlewares: flood-middleware-chain
        traefik.http.middlewares.flood-middleware-chain.chain.middlewares: "strict-https@file"
        traefik.http.routers.flood.service: flood
        traefik.http.services.flood.loadbalancer.server.port: 3000
      placement:
        constraints:
          - node.hostname == elly
      resources:
        limits:
          memory: "300M"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 6

  calibre:
    image: ghcr.io/linuxserver/calibre-web:version-0.6.10
    volumes:
      - /mnt/eq908-media-nfs/config/calibre-web:/config
      - /mnt/eq908-media-nfs/data/book-library:/books
    environment:
      - PGID=900
      - PUID=900
    networks:
      - web
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.calibre.rule: Host(`library.rny.app`)
        traefik.http.routers.calibre.tls: "true"
        traefik.http.routers.calibre.middlewares: calibre-chain
        traefik.http.middlewares.calibre-headers.headers.customrequestheaders.X-Script-Name: "/calibre-web"
        traefik.http.middlewares.calibre-headers.headers.customrequestheaders.X-Scheme: "https"
        traefik.http.middlewares.calibre-chain.chain.middlewares: "strict-https@file,calibre-headers"
        traefik.http.routers.calibre.service: calibre
        traefik.http.services.calibre.loadbalancer.server.port: 8083
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083"]
      interval: 30s
      timeout: 10s
      retries: 6


    # NEXT-GEN rtorrent-flood setup
    #rtorrent:
    #  image: jesec/rtorrent:latest
    #  user: 900:900
    #  networks:
    #    - torrent
    #  volumes:
    #    - /mnt/eq908-media-nfs/data:/data
    #    - /mnt/roberto-nas/config/rtorrent/:/config
    #  environment:
    #    - HOME=/config
    #  command: -o network.scgi.open_port=0.0.0.0:5000
    #  ports:
    #    - 5000
    #  deploy:
    #    replicas: 1
    #    resources:
    #      limits:
    #        memory: "300M"

    #flood:
    #  image: jesec/flood:4.3.1
    #  user: 900:900
    #  networks:
    #    - torrent
    #    - web
    #  volumes:
    #    - /mnt/eq908-media-nfs/data:/data
    #    - /mnt/roberto-nas/config/rtorrent:/config
    #  command: --port 3000 --allowedpath /data
    #  environment:
    #    - HOME=/config
    #  deploy:
    #    replicas: 1
    #    labels:
    #      traefik.enable: "true"
    #      traefik.http.routers.flood.tls: "true"
    #      traefik.http.routers.flood.rule: Host(`torrents.rny.app`)
    #      traefik.http.routers.flood.middlewares: flood-middleware-chain
    #      traefik.http.middlewares.flood-middleware-chain.chain.middlewares: "strict-https@file"
    #      traefik.http.routers.flood.service: flood
    #      traefik.http.services.flood.loadbalancer.server.port: 3000
    #    resources:
    #      limits:
    #        memory: "500M"
    #
networks:
  web:
    external: true
  tor:
    external: true

secrets:
  flood_secret:
    external: true

# vim: set syntax=yaml ts=2 sts=2 sw=2:

